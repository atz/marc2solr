#!/usr/bin/env jruby
require 'rubygems'
require 'pp'
require 'logback-simple'

$:.unshift 'lib'
require 'marc2solr'

# require 'trollop'
# 
# # First, get the args from Trollow
# 
# # What are the sub-commands? (e.g., marc2solr index ..., marc2solr delete ..., etc.)
# 
# SUB_COMMANDS = %w(index delete commit)
# 
# # We'll build up the options from the MARC2Solr::Configuration::OPTIONSCONFIG hash
# 
# 
# cmd = ARGV.shift # get the subcommand
# 
# opts = Trollop::options do
#   banner %q{
# marc2solr -- deal with MARC files and Solr
# 
# USAGE
# 
# Index a marc file
#   marc2solr index  --config ConfigFile --config OtherConfigFile --overrides <marcfile>
# 
# Delete by id from the specified solr
#   marc2solr delete --config ConfigFile --config OtherConfigFile --overrides <file of ids to delete>
# 
# Send a "commit" to the specified solr
#   marc2solr commit --config ConfigFile --overrides
#   
# 
# GLOBAL OPTIONS
#   }
#   MARC2Solr::Configuration::OPTIONSCONFIG.each do |kv|
#     k = kv[0]
#     d = kv[1]
#     next if d[:only]
#     desc = d.delete(:desc)
#     opt k, desc, d
#   end
#   
#   [:index].each do |cmdsym|
#     banner "\n\nOther options for command '#{cmdsym.to_s}'"
#     MARC2Solr::Configuration::OPTIONSCONFIG.each do |kv|
#       k = kv[0]
#       d = kv[1]
#       next unless d[:only] and d[:only].include? cmdsym
#       desc = d.delete(:desc)
#       opt k, desc, d
#     end
#   end
#   stop_on SUB_COMMANDS  
# end

opts = MARC2Solr::Configuration.new

puts "Command is #{opts.command}"
puts "Benchmark: #{opts.benchmark}"
puts "Leftovers are #{opts.rest.join(' ')}"




__END__


##########################################################################
# Get the MARC file from the last argument and make sure it can be opened
##########################################################################

marcfilename = ARGV.pop
ARGV.push '--help' unless marcfilename 
unless File.readable?(marcfilename)
  STDERR.puts "File '#{marcfilename}' not readable"
  ARGV.push '--help'
end

##########################################################################
# Get the command-line args for log setup and later overriding of config
# file settings
#
##########################################################################




##########################################################################
# Set up logging
##########################################################################
LOG = Logback::Simple::Logger.singleton
Logback::Simple.loglevel = :debug
Logback::Simple.startConsoleLogger


# Suck in options from all the other arguments

options = MARC2Solr::Configuration.new
ARGV.each do |filename|
  f = File.new(filename)
  unless f
    STDERR.puts "Cannot open '#{filename}'; aborting"
    Process.exit
  end
  options.instance_eval(f.read)
end



# Make sure we've got what we need

  
# 

pp options
