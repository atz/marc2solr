#!/usr/bin/env jruby
require 'rubygems'
require 'pp'
require 'logback-simple'

$:.unshift 'lib'
require 'marc2solr'

opts = MARC2Solr::Configuration.new

# Get a master logger

# Perform the command

case opts.command
when "commit"
  # get the suss
  # commit
when "delete"
  delfiles = opts.rest
  # Make sure they can all be opened
  # Get the suss (unless dryrun)
  # Buzz through them in turn, keeping count
  # log count
when "index"
  marcfiles = opts.rest
  # make sure they all exist
  # get suss unless dryrun
  # get specset
  


puts "Command is #{opts.command}"
puts "Benchmark: #{opts[:benchmark]}"
puts "Leftovers are #{opts.rest.join(' ')}"





__END__


##########################################################################
# Get the MARC file from the last argument and make sure it can be opened
##########################################################################

marcfilename = ARGV.pop
ARGV.push '--help' unless marcfilename 
unless File.readable?(marcfilename)
  STDERR.puts "File '#{marcfilename}' not readable"
  ARGV.push '--help'
end

##########################################################################
# Get the command-line args for log setup and later overriding of config
# file settings
#
##########################################################################




##########################################################################
# Set up logging
##########################################################################
LOG = Logback::Simple::Logger.singleton
Logback::Simple.loglevel = :debug
Logback::Simple.startConsoleLogger


# Suck in options from all the other arguments

options = MARC2Solr::Configuration.new
ARGV.each do |filename|
  f = File.new(filename)
  unless f
    STDERR.puts "Cannot open '#{filename}'; aborting"
    Process.exit
  end
  options.instance_eval(f.read)
end



# Make sure we've got what we need

  
# 

pp options
